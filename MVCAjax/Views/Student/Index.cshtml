
@{
    ViewBag.Title = "Index";
}
    
    <div class="col-md-12">

        <form class="form-inline md-form form-sm mt-0">
            <button type="button" id="addStudent" class="btn btn-primary" data-toggle="modal" data-target="#addStudentModal">
                Add Student
            </button>
            <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
            <input class="form-control form-control-sm ml-3 w-75" id="searchField" type="text" placeholder="Search Name or Last name"
                   aria-label="Search">
        </form>

        <hr />
        <!-- Modal Create -->

        <div class="modal fade" id="addStudentModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalCenterTitle">Add Student</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group col-md-12">
                            <label>Student Name</label>
                            <input type="text" name="StudentName" id="StudentName" class="form-control" placeholder="Enter Student Name" required />
                        </div>

                        <div class="form-group col-md-12">
                            <label>Student Last Name</label>
                            <input type="text" name="LastName" id="LastName" class="form-control" placeholder="Enter Student Last Name" required />
                        </div>

                        <div class="form-group col-md-12">
                            <label>Student Address</label>
                            <input type="text" name="StudentAddress" id="StudentAddress" class="form-control" placeholder="Enter Student Adress" required />
                        </div>

                        <div class="form-group col-md-12">
                            <label>Student Code</label>
                            <input type="text" name="StudentCode" id="StudentCode" class="form-control" placeholder="Enter Student Code" required />
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" id="btnSave" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Model edit -->
        <div class="modal fade" id="editStudentModal" tabindex="-1" role="dialog" aria-labelledby="titleModal" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="titleModal">Edit Student</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group col-md-12">
                            <label>Student Name</label>
                            <input type="text" name="StudentName1" id="StudentName1" class="form-control" placeholder="Enter Student Name" required />
                        </div>

                        <div class="form-group col-md-12">
                            <label>Student Last Name</label>
                            <input type="text" name="LastName1" id="LastName1" class="form-control" placeholder="Enter Student Last Name" required />
                        </div>

                        <div class="form-group col-md-12">
                            <label>Student Address</label>
                            <input type="text" name="StudentAddress1" id="StudentAddress1" class="form-control" placeholder="Enter Student Adress" required />
                        </div>

                        <div class="form-group col-md-12">
                            <label>Student Code</label>
                            <input type="text" name="StudentCode1" id="StudentCode1" class="form-control" placeholder="Enter Student Code" required />
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" id="" class="btn btn-primary btnUpdate">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Model delete -->
        <div class="modal fade" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="titleModal" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="titleModal">Delete Student</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this student?</p>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" id="" class="btn btn-danger modalDelete">Save</button>
                    </div>
                </div>
            </div>
        </div>



        <table id="tblStudent" class="table table-bordered table-striped table-responsive table-hover">
            <thead>
                <tr>
                    <th align="left" class="productth">ID</th>
                    <th align="left" class="productth">Student Name</th>
                    <th align="left" class="productth">Student Last Name</th>
                    <th align="left" class="productth">Student Address</th>
                    <th align="left" class="productth">Student Code</th>
                    <th align="left" class="productth">Creation Date</th>
                    <th align="left" class="productth">Edit Date</th>
                    <th align="left" class="productth">Edit</th>
                    <th align="left" class="productth">Delete</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

@section Scripts
{
    <script type="text/javascript">

        function editClick( id ) {
            console.log(id);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("getStudentById")',
                    data: '{ id: ' + id + ' }',
                    datatype: "json",
                    contentType: "application/json: charset=utf-8",
                    success: function (data) {
                        console.log(data.studentAddress);
                        $("#StudentName1").val(data.studentName);
                        $("#LastName1").val(data.lastName);
                        $("#StudentAddress1").val(data.studentAddress);
                        $("#StudentCode1").val(data.studentCode)
                    },
                    error: function () {
                        alert("Error while inserting data");
                    }
                });
            $(".btnUpdate").attr("id", "" + id +"");
        };

        function deleteClick(id) {
            $('#warningModal').modal();
                console.log(id);
            $(".modalDelete").click(function () {
                $("#tblStudent tbody tr").remove();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("deleteStudent")',
                        data: '{ id: ' + id + '}',
                        datatype: "json",
                        contentType: "application/json: charset=utf-8",
                        success: function () {
                            LoadData();
                            $('#warningModal').modal('hide')
                        },
                        error: function () {
                            alert("Error while inserting data");
                        }
                    });
                });
        }

        $(function () {
            LoadData();

            $("#btnSave").click(function () {
                var std = {};
                std.studentName = $("#StudentName").val();
                std.lastName = $("#LastName").val();
                std.studentAddress = $("#StudentAddress").val();
                std.studentCode = $("#StudentCode").val();
                
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("createStudent")',
                    data: '{std: ' + JSON.stringify(std) + '}',
                    datatype: "json",
                    contentType: "application/json: charset=utf-8",
                    success: function () {
                        LoadData();
                    },
                    error: function () {
                        alert("Error while inserting data");
                    }
                });
                return false;
            });

            $(".btnUpdate").click(function () {
                var id = $(this).attr('id');
                console.log(id);
                var std = {};
                std.studentName = $("#StudentName1").val();
                std.lastName = $("#LastName1").val();
                std.studentAddress = $("#StudentAddress1").val();
                std.studentCode = $("#StudentCode1").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("editStudent")',
                    data: '{std: ' + JSON.stringify(std) + ', id: ' + id + '}',
                    datatype: "json",
                    contentType: "application/json: charset=utf-8",
                    success: function () {
                        LoadData();
                        $('#editStudentModal').modal('hide')
                    },
                    error: function () {
                        alert("Error while inserting data");
                    }
                });

            });

        });

        function LoadData() {
            $("#tblStudent tbody tr").remove();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getStudent")',
                dataType: 'json',
                data: { id: '' },
                success: function (data) {
                    var items = '';
                    $.each(data, function (i, item) {

                        var wrapper1 = new Date(parseInt(item.creationDate.substring(6, item.creationDate.length - 2)));
                        var formattedCreation = wrapper1.getDate() + "-" + (wrapper1.getMonth() + 1) + "-" + wrapper1.getFullYear() + " " + wrapper1.getHours() + ":" + wrapper1.getMinutes();
                        var wrapper2 = new Date(parseInt(item.editDate.substring(6, item.editDate.length - 2)));
                        var formattedEdit = wrapper2.getDate() + "-" + (wrapper2.getMonth() + 1) + "-" + wrapper2.getFullYear() + " " + wrapper2.getHours() + ":" + wrapper2.getMinutes();

                        var rows = "<tr>"
                            + "<td class='producttd'>" + item.studentID + "</td>"
                            + "<td class='producttd'>" + item.studentName + "</td>"
                            + "<td class='producttd'>" + item.lastName + "</td>"
                            + "<td class='producttd'>" + item.studentAddress + "</td>"
                            + "<td class='producttd'>" + item.studentCode + "</td>"
                            + "<td class='producttd'>" + formattedCreation + "</td>"
                            + "<td class='producttd'>" + formattedEdit + "</td>"
                            + "<td class='producttd'><button type='button' id='" + item.studentID + "' class='btn btn-primary btnEdit' data-toggle='modal' data-target='#editStudentModal' onclick='editClick(" + item.studentID + ")'>Edit</button></td>"
                            + "<td class='producttd'><button type='button' id='" + item.studentID + "' class='btn btn-danger btnDelete' data-target='#warningModal' onclick='deleteClick(" + item.studentID + ")'>Delete</button></td>"
                            + "</tr>";
                        $('#tblStudent tbody').append(rows);
                    });
                },
                error: function (ex) {
                    var r = jQuery.parseJSON(response.responseText);
                    alert("Message: " + r.Message);
                    alert("StackTrace: " + r.StackTrace);
                    alert("ExceptionType: " + r.ExceptionType);
                }
            });
            return false;
        }

        $("#searchField").keyup(function () {
            $("#tblStudent tbody tr").remove();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("searchStudent")',
                dataType: 'json',
                data: { keyword: $(this).val() },
                success: function (data) {
                    var items = '';
                    $.each(data, function (i, item) {

                        var wrapper1 = new Date(parseInt(item.creationDate.substring(6, item.creationDate.length - 2)));
                        var formattedCreation = wrapper1.getDate() + "-" + (wrapper1.getMonth() + 1) + "-" + wrapper1.getFullYear() + " " + wrapper1.getHours() + ":" + wrapper1.getMinutes();
                        var wrapper2 = new Date(parseInt(item.editDate.substring(6, item.editDate.length - 2)));
                        var formattedEdit = wrapper2.getDate() + "-" + (wrapper2.getMonth() + 1) + "-" + wrapper2.getFullYear() + " " + wrapper2.getHours() + ":" + wrapper2.getMinutes();

                        var rows = "<tr>"
                            + "<td class='producttd'>" + item.studentID + "</td>"
                            + "<td class='producttd'>" + item.studentName + "</td>"
                            + "<td class='producttd'>" + item.lastName + "</td>"
                            + "<td class='producttd'>" + item.studentAddress + "</td>"
                            + "<td class='producttd'>" + item.studentCode + "</td>"
                            + "<td class='producttd'>" + formattedCreation + "</td>"
                            + "<td class='producttd'>" + formattedEdit + "</td>"
                            + "<td class='producttd'><button type='button' id='" + item.studentID + "' class='btn btn-primary btnEdit' data-toggle='modal' data-target='#editStudentModal' onclick='editClick(" + item.studentID + ")'>Edit</button></td>"
                            + "<td class='producttd'><button type='button' id='" + item.studentID + "' class='btn btn-danger btnDelete' data-toggle='modal' data-target='#warningModal'>Delete</button></td>"
                            + "</tr>";
                        $('#tblStudent tbody').append(rows);
                    });
                },
                error: function (ex) {
                    var r = jQuery.parseJSON(response.responseText);
                    alert("Message: " + r.Message);
                    alert("StackTrace: " + r.StackTrace);
                    alert("ExceptionType: " + r.ExceptionType);
                }
            });
            return false;
            @*$.ajax({
                    type: "POST",
                    url: '@Url.Action("editStudent")',
                    data: '{std: ' + JSON.stringify(std) + ', id: ' + id + '}',
                    datatype: "json",
                    contentType: "application/json: charset=utf-8",
                    success: function () {
                        LoadData();
                    },
                    error: function () {
                        alert("Error while inserting data");
                    }
                });*@
        })
    </script>

}
